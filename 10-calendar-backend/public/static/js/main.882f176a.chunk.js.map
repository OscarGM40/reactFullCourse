{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/eventActions.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendar-messages.js","components/calendar/CalendarEvent.jsx","actions/uiActions.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","checking","uid","name","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchSinToken","endpoint","data","method","url","process","headers","fetch","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","eventLoading","eventClearActiveEvent","eventUpdate","eventDelete","login","user","checkingFinish","startLogout","dispatch","getState","removeItem","logout","useForm","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","Swal","fire","msg","placeholder","onChange","React","memo","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","username","useMemo","charAt","toUpperCase","slice","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","datesValid","setDatesValid","formValues","setFormValues","useEffect","closeModal","yesterday","subtract","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","text","icon","confirmButtonText","trim","length","console","log","evento","_id","eventStartAddNew","inputProps","width","height","cursor","background","position","color","showTimeSelect","_d","dateFormat","timeFormat","closeOnSelect","closeOnClickOutside","isValidDate","current","isAfter","autoComplete","rows","AddNewFab","DeleteEventFab","then","result","isConfirmed","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouter","path","element","CalendarApp","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.882f176a.chunk.js","sourcesContent":["\nexport const types = {\n  uiOpenModal: \"[ui] Open modal\",\n  uiCloseModal: \"[ui] Close modal\",\n\n  eventSetActive: \"[event] Set active\",\n  eventStartAddNew: \"[event] Start add new\",\n  eventAddNew: \"[event] Add new\",\n  eventClearActiveEvent: \"[event] Clear active event\",\n  eventUpdate:\"[event] Update event\",\n  eventDelete: \"[event] Delete event\",\n  eventLoaded: \"[event] Events loaded\",\n  eventLogout: \"[event] Logout\",\n  \n  authCheckingStart: \"[auth] Checking\",\n  authCheckingFinish: \"[auth] Checking finish\",\n  authLoginSuccess: \"[auth] Login success\",\n  authStartRegister: \"[auth] Register start\",\n  authStartTokenRenewal: \"[auth] Start token renewal\",\n  authLogout: \"[auth] Logout\",\n  \n}; ","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  uid: null,\n  name: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLoginSuccess:\n      return {\n        ...state,\n        checking: false,\n        uid: action.payload.uid,\n        name: action.payload.name,\n      };\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n    case types.authLogout:\n      return {\n        ...state, \n        uid: null,\n        name: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\n/* asi luce un event.Start y end deben de ser tipo Date\n{\n  id: 1,\n  title: \"Evento 1\",\n  start: moment().toDate()\",\n  end: \"moment().add(2,'hours').toDate()\",\n  notes:\"notas del evento 1\"\n  user:{\n    _id:1,\n    name:\"Juan\",\n  }\n}*/\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.eventUpdate:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? action.payload : event\n        ),\n      };\n    case types.eventDelete:\n      return {\n        ...state,\n        events: state.events.filter(\n          (event) => event.id !== state.activeEvent.id\n        ),\n        activeEvent: null,\n      };\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n    case types.eventLogout:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {  \n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n    default:\n      return state;\n  }\n}","\n\nimport { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer\n});\n","\n\nimport { createStore, applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n \n// si existen las herramientas para redux en mis DevTools las va a configurar,si no pues no hace nada ya que no existen :D\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n// createStore necesita un reducer como primer arg,logicamente será la combinación de todos ellos\nexport const store  = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\n","const fetchSinToken = (endpoint, data, method = \"GET\") => {\n  const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\n  // console.log(url, \"url\");\n\n  const headers = {\n    \"Content-type\": \"application/json\",\n  };\n\n  if (method === \"GET\") {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      body: JSON.stringify(data),\n      headers,\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\n  const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\n  // console.log(url, \"url\");\n\n  const token = localStorage.getItem(\"token\") || \"\";\n  const headers = {\n    \"Content-type\": \"application/json\",\n    \"x-token\": token,\n  };\n\n  if (method === \"GET\") {\n    return fetch(url, {\n      method,\n      headers,\n    });\n  } else {\n    return fetch(url, {\n      method,\n      body: JSON.stringify(data),\n      headers,\n    });\n  }\n};\n\nexport { \n  fetchSinToken,\n  fetchConToken\n };\n","import moment from \"moment\";\n\nexport const prepareEvents = (events=[]) => {\n\n  return events.map(event => \n    {\n      event.start = moment(event.start).toDate();\n      event.end = moment(event.end).toDate();\n      return event;\n    });\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const response = await fetchConToken(\"events\", event, \"POST\");\n      const body = await response.json();\n\n      if (body.ok) {\n        event.id = body.evento._id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const response = await fetchConToken(\"events\");\n      const body = await response.json();\n      const events = prepareEvents(body.eventos);\n\n      if (body.ok) {\n        dispatch(eventLoading(events));\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoading = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n      const body = await response.json();\n\n      if (body.ok) {  \n        dispatch(eventUpdate(event));\n      }else{\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdate = (event) => ({\n  type: types.eventUpdate,\n  payload: event,\n});\n\nexport const eventStartDeleting = () => async (dispatch, getState) => {\n  const { id } = getState().calendar.activeEvent;\n\n  try {\n    const response = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n    const body = await response.json();\n\n    if (body.ok) {\n      dispatch(eventDelete());\n    }else{\n      Swal.fire(\"Error\", body.msg, \"error\").then((result) => {\n        if (result.isConfirmed) {\n          dispatch(eventClearActiveEvent());\n        }\n      }); \n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst eventDelete = () => ({\n  type: types.eventDelete,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport Swal from \"sweetalert2\";\nimport { eventLogout } from \"./eventActions\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch, getState) => {\n    const response = await fetchSinToken(\n      \"auth\",\n      {\n        email,\n        password,\n      },\n      \"POST\"\n    );\n    const body = await response.json();\n    \n    if(body.ok){\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(login({\n        uid:body.uid,\n        name:body.name,\n      }));\n    // si no viene el ok a true\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nconst login = (user) => ({\n  type: types.authLoginSuccess,\n  payload: user,\n})\n\nexport  const startRegister = ( name,email,password ) => {\n  return async (dispatch, getState) => {\n    const response = await fetchSinToken(\n      \"auth/new\",\n      {\n        name,\n        email,\n        password,\n      },\n      \"POST\"\n    );\n    const body = await response.json();\n   \n    if(body.ok){\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n      dispatch(login({\n        uid:body.uid,\n        name:body.name,\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async(dispatch, getState) => {\n    const response = await fetchConToken(\"auth/renew\");\n    const body = await response.json();\n    // console.log(body);\n\n    if(body.ok){\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n      \n      dispatch(login({\n        uid:body.uid,\n        name:body.name,\n      }));\n\n    }else{\n      // no hace falta el swal,ya que lo sacaremos al login\n      dispatch(checkingFinish());\n    }\n  }\n}\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nexport const startLogout = () => {\n  return (dispatch, getState) => {\n    /* las modificaciones del localStorage se consideran asíncronas */\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"token-init-date\");\n    dispatch(eventLogout())\n    dispatch(logout());\n    \n  };\n}\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport './loginScreen.css';\nimport { useDispatch } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/authActions';\nimport Swal from 'sweetalert2';\n\nconst LoginScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\n    lEmail: 'test@test.com',\n    lPassword: 'ABCabc123'\n  } );\n  const { lEmail, lPassword } = formLoginValues;\n\n  \n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n    rName: '',\n    rEmail: '',\n    rPassword: '',\n    rPassword2: ''\n  } );\n  const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if(rPassword !== rPassword2){\n      return Swal.fire('Error','Las contraseñas no coinciden','error');\n    }\n    \n    dispatch(startRegister(rName, rEmail, rPassword));\n\n  }\n  \n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n         \n          <form onSubmit={ handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n                name=\"lEmail\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n                name=\"lPassword\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n                name=\"rName\"\n                \n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n                name=\"rEmail\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                value={rPassword}\n                onChange={handleRegisterInputChange}\n                name=\"rPassword\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n                name=\"rPassword2\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Crear cuenta\" />\n            </div>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(LoginScreen);","import { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/authActions\";\n\n\n\nconst Navbar = () => {\n\n  const { name } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n\n      <span className=\"navbar-brand\">{name}</span>\n\n      <button className=\"btn btn-outline-danger\"\n        onClick={handleLogout}\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  )\n}\n\nexport default Navbar\n","export const messages = {\n  allDay: \"Todo el día\",\n  previous: \"<\",\n  next: \">\",\n  today: \"Hoy\",\n  month: \"Mes\",\n  week: \"Semana\",\n  day: \"Día\",\n  agenda: \"Agenda\",\n  date: \"Fecha\",\n  time: \"Hora\",\n  event: \"Evento\",\n  noEventsInRange: \"No hay eventos en este rango\",\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import { useMemo } from \"react\";\n\n\n\n\nexport const CalendarEvent = ({ event }) => {\n\n\n  const { title, user } = event;\n\nconst username = useMemo( () =>{\n  return user.name.charAt(0).toUpperCase() + user.name.slice(1);\n},[user.name]);\n\n  return (\n    <div>\n      <span>{title} - </span>\n      <strong>{ username }</strong>\n    </div>\n  )\n}\n","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});","// fijate que Modal es un HOC super-configurable\nimport Modal from 'react-modal';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\n// import DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css'\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/uiActions';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/eventActions';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n// Estas declaraciones(y el css de arriba ) fijate que están fuera del componente,esto es para que se calculen sólo una vez,a diferencia de si las pusiera dentro del functional component\n\n// en React o Angular simplemente apuntar al selector del div que esta en el index.html con la app del framework\nModal.setAppElement('#root');\n\n// 3:45:50s no quiero esto,quiero horas exactas\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\n// con esto será siempre la siguiente hora\nconst nowPlus1 = now.clone().add(1, 'hours')\n// no puedo operar sobre now porque va por referencia,por eso lo clono ayudandome de la libreria moment y su función clone\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n}\n\nexport const CalendarModal = () => {\n\n  const { modalOpen } = useSelector(state => state.ui)\n  const { activeEvent } = useSelector(state => state.calendar)\n\n  const dispatch = useDispatch()\n\n  const [dateStart, setDateStart] = useState(now.toDate())\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\n  const [titleValid, setTitleValid] = useState(true);\n  const [datesValid, setDatesValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  /* NOTA puedo comprobar por si no es null en un efecto.Incluso por si no es undefined.Lógicamente llevará esa propiedad como dependencia */\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent)\n    }else{\n      setFormValues(initEvent)\n    }\n  }, [activeEvent]);\n\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  }\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent())\n    setFormValues(initEvent);\n  }\n\n  const handleStartDateChange = (date) => {\n    setDateStart(date._d);\n    // const endTime = moment(date._d).add(1, 'hours');\n    // setDateEnd(endTime._d.toDate());\n\n    setFormValues({\n      ...formValues,\n      start: date._d,\n    });\n  }\n\n  const handleEndDateChange = (date) => {\n    setDateEnd(date._d);\n    setFormValues({\n      ...formValues,\n      end: date._d,\n    });\n  }\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    // Puedo parsear una Date a un objeto moment con moment(date) y un objeto moment a Date con moment.toDate()\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      setDatesValid(false);\n      return Swal.fire({\n        title: 'Error',\n        text: 'La fecha final debe ser mayor que la inicial',\n        icon: 'error',\n        confirmButtonText: 'Ok'\n      })\n    }\n\n\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    // si el activeEvent está en null estoy creando uno,si está definido estoy editando\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues))\n    } else {\n      dispatch(eventStartAddNew(formValues))\n    }\n\n    setTitleValid(true);\n    setDatesValid(true);\n    closeModal();\n\n  }\n\n  const yesterday = moment(dateStart).subtract(1, 'day')\n  const valid = (current) => {\n    return current.isAfter(yesterday);\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        closeTimeoutMS={200}\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n      >\n        <h1> { !!activeEvent \n               ? \"Editar evento\"\n               : \"Nuevo evento\"} \n        </h1>\n        <hr />\n        <form className=\"container\" onSubmit={handleSubmitForm}>\n\n          <div className=\"form-group\">\n            <label>Fecha y hora inicio</label>\n\n            <DatePicker\n              inputProps={{\n                style: {\n                  width: \"100%\", height: \"114%\", cursor: \"pointer\", background: 'black',\n                  position: \"relative\", top: \"-2px\", left: \"-3px\", color: 'white'\n                }\n              }}\n              value={dateStart}\n              showTimeSelect\n              onChange={handleStartDateChange}\n              dateFormat=\"DD-MM-YYYY\"\n              timeFormat=\"hh:mm A\"\n              className={datesValid\n                ? 'form-control m-0 py-0 pl-0 pr-4.5 is-valid'\n                : 'form-control m-0 py-0 pl-0 pr-4.5 is-invalid'}\n              closeOnSelect={true}\n              closeOnClickOutside={true}\n\n            />\n\n          </div>\n\n          <div className=\"form-group\">\n            <label>Fecha y hora fin</label>\n            <DatePicker\n              inputProps={{\n                style: {\n                  width: \"100%\", height: \"114%\",\n                  cursor: \"pointer\", background: 'black',\n                  position: \"relative\", top: \"-2px\", left: \"-3px\", color: 'white'\n                }\n              }}\n              value={dateEnd}\n              onChange={handleEndDateChange}\n              dateFormat=\"DD-MM-YYYY\"\n              timeFormat=\"hh:mm A\"\n              closeOnSelect={true}\n              className={datesValid\n                ? 'form-control m-0 py-0 pl-0 pr-4.5 is-valid'\n                : 'form-control m-0 py-0 pl-0 pr-4.5 is-invalid'}\n              closeOnClickOutside={true}\n              isValidDate={valid}\n            />\n          </div>\n\n          <hr />\n          <div className=\"form-group\">\n            <label>Titulo y notas</label>\n            <input\n              type=\"text\"\n              className={`form-control ${!titleValid && 'is-invalid'}`}\n              placeholder=\"Título del evento\"\n              name=\"title\"\n              value={title}\n              onChange={handleInputChange}\n              autoComplete=\"off\"\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n          </div>\n\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Notas\"\n              rows=\"5\"\n              name=\"notes\"\n              value={notes}\n              onChange={handleInputChange}\n              autoComplete=\"off\"\n            ></textarea>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-primary btn-block\"\n          >\n            <i className=\"far fa-save\"></i>\n            <span> Guardar</span>\n          </button>\n\n        </form>\n      </Modal>\n    </div>\n  )\n}\n","import { useDispatch } from \"react-redux\"\nimport { eventClearActiveEvent } from \"../../actions/eventActions\"\nimport { uiOpenModal } from \"../../actions/uiActions\"\n\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch()\n\n  const handleClick = () => {\n    dispatch(eventClearActiveEvent());\n    dispatch(uiOpenModal())\n  }\n\n  return (\n    <button className=\"btn btn-primary fab\"\n      onClick={handleClick}>\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  )\n}\n","import { useDispatch } from \"react-redux\"\nimport { eventStartDeleting } from \"../../actions/eventActions\"\n\n\n\n\nexport const DeleteEventFab = () => {\n\n  const dispatch = useDispatch()\n\n  const handleDelete = () => {\n    dispatch(eventStartDeleting())\n  }\n\n  return (\n    <button className=\"btn btn-danger fab-danger\"\n    onClick={handleDelete}>\n      <i className=\"fas fa-trash mr-2\"></i>\n      <span>Borrar evento</span>\n    </button>\n  )\n}\n","import { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar'\nimport Navbar from \"../ui/Navbar\"\nimport moment from 'moment'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { messages } from '../../helpers/calendar-messages'\n\nimport 'moment/locale/es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { useEffect, useState } from 'react'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/uiActions'\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/eventActions'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\nmoment.locale('es')\n\n// Setup the localizer by providing the moment Object\n// to the correct localizer.\n// const localizer = BigCalendar.momentLocalizer(moment) <- forma anterior sin desestructurar\nconst localizer = momentLocalizer(moment)\n\n// los eventos tienen que tener ciertas caracteristicas para que BigCalendar los pueda interpretar.Serán un arreglo de objetos por motivos obvios.\n\n// Es obligatorio poner fecha de inicio y de fin con start y end,pero también puedo mandarle propiedades inventadas,como el bgcolor.\n/* const events = [\n  {\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(), //lo mismo que un new Date()\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: '#ff9797',\n    notes: 'comprar el pastel',\n    user: {\n      _id: '123',\n      name: 'Oscar',\n    }\n  }\n] */\n\n\nconst CalendarScreen = () => {\n\n  const { events, activeEvent } = useSelector(state => state.calendar)\n  const { uid } = useSelector(state => state.auth);\n\n  const dispatch = useDispatch();\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch])\n\n  // doble click en un evento de calendario\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal())\n  }\n\n  // onSelect es al clickar en un evento una vez\n  const onSelect = (e) => {\n    dispatch(eventSetActive(e));\n  }\n\n  // al cambiar de vista  e===mes|semana|dia|agenda\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent());\n  }\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    let style = {\n      backgroundColor:( uid === event.user.id \n         ? '#059afdf9' \n         : '#574e4c'),\n      borderRadius: '10px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    }\n    return {  \n      style\n    }\n\n  }\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <BigCalendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelect}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{ event: CalendarEvent }}\n      />\n      <AddNewFab />\n      {!!activeEvent && <DeleteEventFab />}\n      <CalendarModal />\n    </div>\n  )\n}\n\nexport default CalendarScreen\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ children }) => {\n  const { uid } = useSelector((state) => state.auth);\n\n  return !!uid ? children : <Navigate to=\"/login\" />;\n  \n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst PublicRoute = ({ children }) => {\n  const { uid } = useSelector((state) => state.auth);\n\n  return !!uid ? <Navigate to=\"/\" /> : children;\n};\n\nexport default PublicRoute;\n","\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { startChecking } from \"../actions/authActions\";\nimport LoginScreen from \"../components/auth/LoginScreen\";\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\n\nconst AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const { checking } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return (\n      <h5>Espere...</h5>)\n  }\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/login\" element={\n          <PublicRoute>\n            <LoginScreen />\n          </PublicRoute>\n        }\n        />\n\n        <Route path=\"/*\" element={\n          <PrivateRoute>\n            <CalendarScreen />\n          </PrivateRoute>\n        }\n        />\n        {/* <Route path=\"*\" element={<CalendarScreen />} />   */}\n\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default AppRouter\n","import { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nimport AppRouter from \"./routers/AppRouter\"\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default CalendarApp\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CalendarApp from \"./CalendarApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Suspense fallback={<div>Loading...</div>}>\n    <CalendarApp />\n  </Suspense>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}